const a = 5;
const b = 7;
const c = 13.5;
let soma = a + b;
let sub = a - b;
let mult = a * b;
let div = a / b;
let mod = a % b;

console.log(soma);
console.log(sub);
console.log(mult);
console.log(div);
console.log(mod);

// Utilize if/else para escrever um c√≥digo que retorne o maior de dois n√∫meros. Defina, no come√ßo do seu c√≥digo, duas constantes com os valores que ser√£o comparados.
if (a > b) {
    console.log('O maior n√∫mero √© ' + a)
} else {
    console.log('O maior n√∫mero √© ' + b)
}

// Utilize if/else para escrever um c√≥digo que retorne o maior de tr√™s n√∫meros. Defina, no come√ßo do seu c√≥digo, tr√™s constantes com os valores que ser√£o comparados.
if (a > b && a > c) {
    console.log('O maior n√∫mero √© ' + a)
} else if (b > a && b > c) {
    console.log('O maior n√∫mero √© ' + b)
} else {
    console.log('O maior n√∫mero √© ' + c)
}

// Utilize if/else para escrever um c√≥digo que, dado um valor recebido como par√¢metro, retorne ‚Äúpositive‚Äù se esse valor for positivo, ‚Äúnegative‚Äù se for negativo, e caso n√£o seja nem positivo e nem negativo retorne ‚Äúzero‚Äù.
if (a > 0) {
    console.log("Positive")
} else if (a < 0) {
    console.log("Negative")
} else {
    console.log("Zero")
}

//üöÄ Utilize if/else para escrever um c√≥digo que defina tr√™s constantes com os valores dos tr√™s √¢ngulos internos de um tri√¢ngulo. Retorne true se os √¢ngulos representarem os √¢ngulos de um tri√¢ngulo e false, caso contr√°rio. Se algum √¢ngulo for inv√°lido, voc√™ deve retornar uma mensagem de erro.
// Para os √¢ngulos serem de um tri√¢ngulo v√°lido, a soma dos tr√™s deve ser 180 graus.
// Um √¢ngulo ser√° considerado inv√°lido se n√£o tiver um valor positivo.

const x = 60;
const y = 70;
const z = 60;

if (x <= 0 || y <= 0 || z <= 0) {
    console.log('Erro: √¢ngulo inv√°lido')
} else if (c + y + z === 180) {
    console.log(true)
} else {
    console.log(false)
}

//Utilize switch/case para escrever um c√≥digo que receba o nome de uma pe√ßa de xadrez e retorne os movimentos que ela faz.
//Como desafio, escreva um c√≥digo para funcionar tanto se receber o nome de uma pe√ßa com letras mai√∫sculas quanto com letras min√∫sculas, sem aumentar a quantidade de condicionais.
//Como dica, voc√™ pode pesquisar uma fun√ß√£o que faz uma string ficar com todas as letras min√∫sculas (lower case).
//Se a pe√ßa passada for inv√°lida, o c√≥digo deve retornar uma mensagem de erro.
//Exemplo: bishop (bispo) -> diagonals (diagonais)

let pecaDada = "rei";
let peca = pecaDada.toUpperCase()

switch (peca) {
    case "BISPO":
        console.log("diagonal");
        break;
    case "PE√ÉO":
        console.log("frente e tr√°s uma casa");
        break;
    case "TORRE":
        console.log("frente e tr√°s o quanto quiser");
        break;
    case "CAVALO":
        console.log("Em L");
        break;
    case "RAINHA":
        console.log("Para onde quiser, o quanto quiser");
        break;
    case "REI":
        console.log("Qualquer dire√ß√£o uma casa");
        break;
    default:
        console.log("Essa n√£o √© uma pe√ßa v√°lida")
}

